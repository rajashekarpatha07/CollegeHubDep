#!/bin/bash

# Build script for Render deployment

echo "Starting build process..."

# Install dependencies
npm install

# Create the parse-server.js (last resort)
echo "Creating parse-server.js file and fallbacks..."

# If parse-server.js doesn't exist, create it with a reliable fallback
if [ ! -f "parse-server.js" ]; then
  echo "parse-server.js not found, creating it..."
  
  # Use the CommonJS fixed server as it's most reliable
  echo "// Generated by build.sh for Render deployment" > parse-server.js
  echo "console.log('Starting with fallback parse-server.js');" >> parse-server.js
  echo "try {" >> parse-server.js
  echo "  require('./parse-server-express.js');" >> parse-server.js
  echo "} catch (err) {" >> parse-server.js
  echo "  console.error('Failed to start fallback server:', err);" >> parse-server.js
  echo "  const express = require('express');" >> parse-server.js
  echo "  const app = express();" >> parse-server.js
  echo "  const port = process.env.PORT || 10000;" >> parse-server.js
  echo "  app.get('/', (req, res) => res.send('Emergency fallback server running'));" >> parse-server.js
  echo "  app.get('/health', (req, res) => res.status(200).send('OK'));" >> parse-server.js
  echo "  app.listen(port, () => console.log('Emergency server running on port ' + port));" >> parse-server.js
  echo "}" >> parse-server.js
  
  echo "Created parse-server.js with fallback server"
fi

# Make sure it's executable
chmod +x parse-server.js

# List all files in the directory
echo "Files in the build directory:"
ls -la

echo "Build process completed successfully!" 